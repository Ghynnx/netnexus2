
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

public class Members extends javax.swing.JFrame {

    private static final String FILE_PATH = "src\\netnexus.json";

    public Members() {
        initComponents();
        setupUI();
    }

    private void setupUI() {
        logsTf.setEditable(false);
        dsctTf.setEditable(false);
        rankTf.setEditable(false);

        usnTf.addFocusListener(new java.awt.event.FocusAdapter() {
            @Override
            public void focusLost(java.awt.event.FocusEvent evt) {
                handleUserFocusLost();
            }
        });
    }

    private synchronized JSONObject readJSONFile() throws IOException, ParseException {
        File file = new File(FILE_PATH);
        if (!file.exists()) {
            throw new IOException("JSON file not found at: " + FILE_PATH);
        }
        String content = new String(Files.readAllBytes(Paths.get(FILE_PATH)));
        JSONParser parser = new JSONParser();
        return (JSONObject) parser.parse(content);
    }

    // Helper to write JSON file
    private synchronized void writeJSONFile(JSONObject jsonObject) throws IOException {
        try (FileWriter writer = new FileWriter(FILE_PATH)) {
            writer.write(jsonObject.toJSONString());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        rankTf = new javax.swing.JTextField();
        amtTf = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        timeTf = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        logsTf = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        dsctTf = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        usnTf = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("user");

        jLabel2.setText("amount");

        jLabel3.setText("rank");

        rankTf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                rankTfKeyReleased(evt);
            }
        });

        amtTf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                amtTfKeyReleased(evt);
            }
        });

        jLabel4.setText("Time");

        timeTf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                timeTfKeyReleased(evt);
            }
        });

        jLabel5.setText("Logins");

        logsTf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                logsTfKeyReleased(evt);
            }
        });

        jLabel6.setText("Discount");

        dsctTf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dsctTfKeyReleased(evt);
            }
        });

        jButton1.setText("topUp");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        usnTf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                usnTfFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(amtTf, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                    .addComponent(usnTf))
                .addGap(81, 81, 81)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rankTf)
                    .addComponent(timeTf, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE))
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(logsTf)
                        .addComponent(dsctTf, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(191, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rankTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(logsTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(usnTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amtTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dsctTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addComponent(jButton1)
                .addContainerGap(163, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void UsnTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsnTFActionPerformed


    }//GEN-LAST:event_UsnTFActionPerformed

    private void TopUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TopUpActionPerformed


    }//GEN-LAST:event_TopUpActionPerformed

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed

    }//GEN-LAST:event_ClearActionPerformed

    private void LogsTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogsTFActionPerformed

    }//GEN-LAST:event_LogsTFActionPerformed
    // TODO add your handling code here:

    private void DscntTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DscntTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DscntTFActionPerformed

    private void AmtTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AmtTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AmtTFActionPerformed

    private void RnkTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RnkTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RnkTFActionPerformed
    // TODO add your handling code here:

    private void TimeTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TimeTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TimeTFActionPerformed

    private void amtTfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amtTfKeyReleased
     // TODO add your handling code here:
    }//GEN-LAST:event_amtTfKeyReleased

    private void rankTfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rankTfKeyReleased
        rankTf.setText("");

    }//GEN-LAST:event_rankTfKeyReleased

    private void logsTfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_logsTfKeyReleased
        logsTf.setText("");
    }//GEN-LAST:event_logsTfKeyReleased

    private void timeTfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_timeTfKeyReleased
        timeTf.setText("");        // TODO add your handling code here:
    }//GEN-LAST:event_timeTfKeyReleased

    private void dsctTfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dsctTfKeyReleased
        dsctTf.setText("");
    }//GEN-LAST:event_dsctTfKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        handleTopUp();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void usnTfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usnTfFocusLost
        handleUserFocusLost();
    }//GEN-LAST:event_usnTfFocusLost
    private String determineRank(int logins) {
        if (logins >= 30) {
            return "Gold";
        } else if (logins >= 20) {
            return "Silver";
        } else if (logins >= 10) {
            return "Bronze";
        } else {
            return "Regular";
        }
    }

    // Calculate discount based on logins
    private int calculateDiscount(int logins) {
        if (logins >= 30) {
            return 15;
        } else if (logins >= 20) {
            return 10;
        } else if (logins >= 10) {
            return 5;
        } else {
            return 0;
        }
    }




    // Handle user text field focus lost
    private void handleUserFocusLost() {
        String enteredUsername = usnTf.getText().trim();
        if (enteredUsername.isEmpty()) {
            return;
        }

        try {
            JSONObject jsonObject = readJSONFile();
            JSONArray users = (JSONArray) jsonObject.get("users");

            if (users != null) {
                for (Object obj : users) {
                    JSONObject user = (JSONObject) obj;
                    String username = (String) user.get("username");

                    if (username != null && username.equalsIgnoreCase(enteredUsername)) {
                        long logins = user.get("logins") != null ? (long) user.get("logins") : 0;
                        long discount = user.get("discount") != null ? (long) user.get("discount") : 0;
                        String userTime = user.get("userTime") != null ? (String) user.get("userTime") : "N/A";

                        logsTf.setText(String.valueOf(logins));
                        dsctTf.setText(String.valueOf(discount));
                        timeTf.setText(userTime);
                        rankTf.setText(determineRank((int) logins));
                        return;
                    }
                }
            }
            JOptionPane.showMessageDialog(this, "User not found.");
        } catch (IOException | ParseException ex) {
            Logger.getLogger(Members.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error reading JSON file.");
        }
    }

    // Handle the "Top Up" button press
    private void handleTopUp() {
    String enteredUsername = usnTf.getText().trim();
    String amountStr = amtTf.getText().trim();

    if (enteredUsername.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter a username.");
        return;
    }

    double amount;
    try {
        amount = Double.parseDouble(amountStr); // Allow decimals for balance
        if (amount <= 0) {
            throw new NumberFormatException("Amount must be greater than 0.");
        }
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Invalid amount entered.");
        return;
    }

    try {
        JSONObject jsonObject = readJSONFile();
        JSONArray users = (JSONArray) jsonObject.get("users");

        if (users != null) {
            for (Object obj : users) {
                JSONObject user = (JSONObject) obj;
                String username = (String) user.get("username");

                if (username != null && username.equalsIgnoreCase(enteredUsername)) {
                    // Calculate session time based on balance
                    String calculatedTime = calculateUserTime(amount);

                    // Update the time text field
                    timeTf.setText(calculatedTime);

                    // Update user data in JSON
                    long logins = user.get("logins") != null ? (long) user.get("logins") : 0;
                    logins++;
                    user.put("logins", logins);
                    user.put("userTime", calculatedTime);

                    int discount = calculateDiscount((int) logins);
                    user.put("discount", discount);

                    writeJSONFile(jsonObject);
                    JOptionPane.showMessageDialog(this, "Top-up successful! " +
                            "New session duration: " + calculatedTime);
                    return;
                }
            }
        }
        JOptionPane.showMessageDialog(this, "User not found.");
    } catch (IOException | ParseException ex) {
        Logger.getLogger(Members.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, "Error processing JSON file.");
    }
}
    private String calculateUserTime(double balance) {
    int timeInSeconds = (int) ((balance / 20) * 3600); // 1 hour per 20 balance
    int hours = timeInSeconds / 3600;
    int minutes = (timeInSeconds % 3600) / 60;
    int seconds = timeInSeconds % 60;
    return String.format("%02d:%02d:%02d", hours, minutes, seconds);
}

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            new Members().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amtTf;
    private javax.swing.JTextField dsctTf;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField logsTf;
    private javax.swing.JTextField rankTf;
    private javax.swing.JTextField timeTf;
    private javax.swing.JTextField usnTf;
    // End of variables declaration//GEN-END:variables
}
